
from __future__ import absolute_import, division, print_function, unicode_literals
from octoprint.printer.standard import Printer
import octoprint
from octoprint.util import comm as comm
from octoprint.printer import (
    InvalidFileLocation,
    InvalidFileType,
    PrinterCallback,
    PrinterInterface,
    UnknownScript,
)
from octoprint.printer.estimation import PrintTimeEstimator
from octoprint.settings import settings
from octoprint.util import InvariantContainer
from octoprint.util import comm as comm
from octoprint.util import get_fully_qualified_classname as fqcn
from octoprint.util import monotonic_time, to_unicode
from octoprint.printer.profile import PrinterProfileManager

import octoprint.filemanager.analysis  # noqa: E402
import octoprint.filemanager.storage  # noqa: E402

import octoprint.slicing

from octoprint.printer.profile import PrinterProfileManager

analysis_queue_factories = {
            "gcode": octoprint.filemanager.analysis.GcodeAnalysisQueue
        }


analysisQueue = octoprint.filemanager.analysis.AnalysisQueue(
            analysis_queue_factories
        )

# slicingManager = octoprint.slicing.SlicingManager(
#             self._settings.getBaseFolder("slicingProfiles"), printerProfileManager
#         )
slicingManager = None
printerProfileManager = PrinterProfileManager()

#sendJogCommand('x',1)
fileManager = octoprint.filemanager.FileManager(
            analysisQueue,
            slicingManager,
            printerProfileManager,
            initial_storage_managers=storage_managers,
        )




t1=Printer(fileManager, analysisQueue, printerProfileManager)

data=10

t1.jog('z',1)